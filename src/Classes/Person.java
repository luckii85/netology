package Classes;

public class Person {         // если добавить "final" в описание класса, то тогда от него нельзя будет отнаследоваться
    public static int numberOfPeople; // "глобальная" (static) переменная, может везде использоваться

    // todo Переменные класса (поля)
    String name; // поля класса, без указания переменная может использоваться внутри класса и в папке
    private int age; // может использоваться только в классе, изменить из других мест нельзя
    protected int raiting; // переменная, которую могут использовать все наследники и внутри пакета (папки)

    // todo Сеттеры и геттеры (назначение и передача переменных класса)

    public void setName(String name) {   // сеттер, только устанавливает "имя"
        this.name = name;
    }

    public void setAge(int age) {       // сеттер, проверяет, что число находится в нужно диапазоне
        if (age < 0 || age > 110) {
            System.out.println("invalid age!");
            return;
        }                   // return; - заканчивает метод ("выйди и ничего не меняй")
        this.age = age;
    }

    public int getAge() {              // геттер возраста: показывает возраст, так как сама переменная "закрыта"
        return age;
    }

    // todo Конструкторы
    public Person(String name, int age) {  // конструктор класса; при создании нового объекта выполнит все, что находится в конструкторе
        this.name = name;
        this.age = age;
        numberOfPeople++;
        System.out.println("\nCreated: " + name + ", age: " + age + ", [" + numberOfPeople + "]");
    }
//
//    public Person(String name) {       // возможно создание нескольких конструктров по кол-ву аргументов;
//        this.name = name;              // при создании объекта с этим конструктором (когда будет введено только "имя"
//        this.number = 0;               // будет заполнено "имя" и "номеру" присвоено 0, но не будет выводится сообщение о создании объекта
//    }                                  // и изменяться статическая переменная "сумма классов"
//
//    public Person() {                         // возможно создание нескольких конструктров по кол-ву аргументов
//        this("null", 0);          // обращение к первому конструктору (с двумя аргументами), где "имени" всегда присвается "пусто",
//    }                                         // а "номеру" - 0; остальные команды конструктора также будут выполняться!

    // todo Функции

    public String toString() {              // метод вывода имени объекта класса, работает сам при выводе имени объекта класса
        return name + ", age:" + age; // изменение дефолтного метода toString() на свой вариант
    }

    // todo методы
    public void say(String text) {           // метод класса (получает text), что-то делает
        System.out.println("\n" + name + " say: " + text);
    }

}
